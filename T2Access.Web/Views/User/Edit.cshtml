@model T2Access.Models.UserViewModel
@using T2Access.Web.Resources
@using T2Access.Web.Helper


@{
    ViewBag.Title = "Edit";
}





@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { onsubmit = " return EditUser(this)" }))
{
    @Html.AntiForgeryToken()


    <div class="form form-panel">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row mt">
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mt">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "dropdown-toggle col-md-3" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="mt">
            <div class="form-group form-panel  ">
                <h6>Gate List</h6>
                <div class="centered">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.GateList)
                        @Html.Action("GetCheckedByUserId", "Gate", new { UserId = Model.Id })
                    </div>
                </div>
            </div>





            <div class="form-group centered ">
                <div>
                    <hr />
                    <input type="submit" value=@Resource.Edit class="btn btn-primary  btn-lg  col-md-2 " />
                    @Html.ActionLink(Resource.Back, "UserManagment", "User", null, new { @class = "btn btn-dark btn-lg  col-md-1" })

                </div>
            </div>






        </div>
    </div>
}




@section Scripts
  {
    @Html.RegisteredScripts()

    <script>
        var EditUser =function (form) {

            var table = $("#GTable").DataTable();
            var rowsel = table.rows('.selected').indexes();
            var selectedGuid = [];

            $.each(rowsel, function (index, rowId) {
                selectedGuid.push(table.rows(rowId).nodes().to$().find("input[type='hidden']").attr("value"));
            });

            form.GateList.value = selectedGuid.toString();
            
              return true;

        }



    </script>

}


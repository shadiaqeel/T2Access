@model IEnumerable<T2Access.Models.UserModel>
@using T2Access.Web.Resources


@{
    ViewBag.Title = "User  Managment";
}


<div class="row mt">
    <div class="col-md-12">
        <div class="content-panel  ">
            <table class="table table-striped table-advance table-hover">

                <div class=" pr-4">
                    <h4 style="display:inline-block;"> @Resource.UserTable </h4>
                    @*<button class="btn btn-outline-primary pull-right" data-toggle="modal" data-target="#createModal"> @Resource.CreateUser </button>*@
                    @Html.ActionLink(Resource.CreateUser, "Create", "User", null, new { @class = "btn btn-outline-primary pull-right" })
                </div>

                @if (!string.IsNullOrEmpty(ViewBag.StateMessage))
                {
                    <div class="alert alert-success" role="alert">ViewBag.StateMessage)</div>
                }
                @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                    <div class="alert alert-danger" role="alert">ViewBag.ErrorMessage</div>

                }

                <br>
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.UserName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.LastName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                                <td>
                                    @*@Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "fa fa-check btn btn-success btn-xs" })*@
                                    <button title="@Resource.Edit" class="btn btn-primary btn-xs fa fa-pencil" data-toggle="modal" onclick='editModal(@Html.Raw(Json.Encode(item)))'></button>
                                    @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = " btn btn-danger btn-xs fa fa-trash-o",@title=@Resource.Delete })
                                    <button title=" @Resource.Reset" class="btn btn-warning btn-xs fa fa-key" data-toggle="modal" onclick='ResetPasswordModal(@Html.Raw(Json.Encode(item)))'></button>

                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>






@Html.Partial("_ModalPartial")

@section Scripts
  {

    <script>


            var createGateUrl = "@Url.Action("Create", "User")";
            var editGateUrl = "@Url.Action("Edit", "User")";
            var resetpasswordGateUrl = "@Url.Action("ResetPassword", "User")";



            var createModal = function () {

                $("#addEditModalContent").load(createGateUrl, function () {
                    $("#addEditModal").modal("show");
                    bindForm(this);
                 });
            }

            var editModal = function (data) {
                    console.log(data);
                $("#addEditModalContent").load(editGateUrl,function () {


                    $("#Id").val(data.Id);
                    $("#UserName").val(data.UserName);
                    $("#FirstName").val(data.FirstName);
                    $("#LastName").val(data.LastName);
                    $("#Status").val(data.Status);

                    $("#addEditModal").modal("show");


                    bindForm(this);

                 });
            }

            var ResetPasswordModal = function (data) {
            $("#addEditModalContent").load(resetpasswordGateUrl, function () {


                $("#Id").val(data.Id);
                $("#UserName").val(data.UserName);
                $("#Password").val(data.Password);
                $("#ConfirmPassword").val(data.ConfirmPassword);

                $("#addEditModal").modal("show");

                bindForm(this);

            });
        }

           function bindForm(dialog) {

            $('form', dialog).submit(function () {

                console.log("submit" + this);
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        console.log(result);

                        if (result.confirm) {

                            ConfirmAdmin(this.action,$(this).serialize());
                        }
                        else if (result.success) {
                            $('#addEditModal').modal('hide');
                            location.reload();
                        } else {
                            $('#addEditModalContent').html(result);
                            bindForm(dialog);
                        }

                    }
                });

                return false;
            });


        }

           function ConfirmAdmin(returnUrl, dataForm) {
              console.log("ConfirmAdmin");

            $("#addEditModalContent").load("@Url.Action("ReLogin", "Account")", function () {
                $("#modal-title").val("Comfirm Operation");

                console.log("ConfirmAdmin1"+returnUrl+dataForm);

                bindConfirm(this, returnUrl,dataForm);


            });


        }

           function bindConfirm(dialog,returnUrl,dataForm) {

                console.log("bindConfirm");

            $('form', dialog).submit(function () {

                console.log("dataForm" + dataForm);
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $.post(returnUrl, dataForm).done(function (data) {

                                  $('#addEditModal').modal('hide');
                                   location.reload();
                            });
                          
                        } else {
                            $('#addEditModalContent').html(result);
                            bindConfirm(dialog, dataForm);
                        }

                    }
                });

                return false;
            });


        }



    </script>




}
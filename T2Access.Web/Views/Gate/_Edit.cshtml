@model T2Access.Models.GateViewModel
@using T2Access.Web.Resources




<div class="modal-header justify-content-lg-center">
    <h4 class="modal-title" id="createmodalLabel">@Resource.Edit</h4>

    @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
</div>


@using (Html.BeginForm())
{

@Html.AntiForgeryToken()
<div class="modal-body">


    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })       
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {<p class="alert alert-danger" role="alert">@ViewBag.ErrorMessage</p>}
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.NameAr, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class=" row ">
            <div class="form-group  col-md-5">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-12">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer justify-content-lg-center">

        <div class="form-group">
            <input type="submit" value=@Resource.Edit class="btn btn-primary " />

            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">@Resource.Cancel</button>
        </div>
    </div>
</div>
}



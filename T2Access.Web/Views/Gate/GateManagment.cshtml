@model IEnumerable<T2Access.Models.GateModel>
@using T2Access.Web.Resources

@{
    ViewBag.Title = "GateManagment";
}



    <div class="row mt">
        <div class="col-md-12">
            <div class="content-panel  ">
                <table class="table table-striped table-advance table-hover">

                    <div class=" pr-4">
                        <h4 style="display:inline-block;"> @Resource.GateTable </h4>
                        <button class="btn btn-outline-primary pull-right" data-toggle="modal" onclick="createModal()"> @Resource.CreateGate</button>

                        @*@Html.ActionLink(Resource.CreateGate, "Create", "Gate", null, new { @class = "btn btn-outline-primary pull-right" })*@
                    </div>
                    <br>
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.UserName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NameAr)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NameEn)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.NameAr)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.NameEn)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </td>
                                    <td>
                                        @*@Html.ActionLink(" ", "Details", new { id = item.Id } ,  new { @class="fa fa-check btn btn-success btn-xs"})*@
                                        @*@Html.ActionLink(@Resource.Edit, "Edit", new { id = item.Id }, new { @class = " btn btn-primary btn-xs fa fa-pencil" })*@
                                        <button title="@Resource.Edit" class="btn btn-primary btn-xs fa fa-pencil" data-toggle="modal" onclick='editModal(@Html.Raw(Json.Encode(item)))'></button>
                                        @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = " btn btn-danger btn-xs fa fa-trash-o"  , @title = @Resource.Delete})
                                        <button title=" @Resource.Reset" class="btn btn-warning btn-xs fa fa-key" data-toggle="modal" onclick='ResetPasswordModal(@Html.Raw(Json.Encode(item)))'></button>

                                    </td>
                                </tr>
                            }

                        }



                </table>

                </table>
            </div>
            <!-- /content-panel -->
        </div>








        @Html.Partial("_ModalPartial")

        @section Scripts
  {



            <script>


            var createGateUrl = "@Url.Action("Create", "Gate")";
            var editGateUrl = "@Url.Action("Edit", "Gate")";
            var resetpasswordGateUrl = "@Url.Action("ResetPassword", "Gate")";

            var createModal = function () {

                $("#addEditModalContent").load(createGateUrl, function () {
                    $("#addEditModal").modal("show");
                    bindForm(this);
                 });
            }

                var editModal = function (data) {
                    console.log(data);
                $("#addEditModalContent").load(editGateUrl,function () {


                    $("#Id").val(data.Id);
                    $("#UserName").val(data.UserName);
                    $("#NameAr").val(data.NameAr);
                    $("#NameEn").val(data.NameEn);
                    $("#Status").val(data.Status);

                    $("#addEditModal").modal("show");


                    bindForm(this);

                 });
            }
                var ResetPasswordModal = function (data) {
                    console.log(data);
                $("#addEditModalContent").load(resetpasswordGateUrl,function () {


                    $("#Id").val(data.Id);
                    $("#UserName").val(data.UserName);
                    $("#Password").val(data.Password);
                    $("#ConfirmPassword").val(data.ConfirmPassword);

                    $("#addEditModal").modal("show");


                    bindForm(this);

                 });
            }




                function bindForm(dialog) {


                    $('form', dialog).submit(function () {

                        console.log(this);
                        $.ajax({
                            url: this.action,
                            type: this.method,
                            data: $(this).serialize(),
                            success: function (result) {
                                if (result.success) {
                                    $('#addEditModal').modal('hide');
                                    location.reload();
                                } else {
                                    $('#addEditModalContent').html(result);
                                    bindForm(dialog);
                                }
                                                                console.log(result);

                                console.log(this);
                            }
                        });

                        return false;
                    });


                }



            </script>




        }
